app: module = APP
Animal: interface = {
    speak: fn (&this) -> str;
}

Dog: struct impl Animal = {
    impl Animal {
        speak: fn (&this) -> str = {
            return "Bark";
        }
    }
}
Cat: struct impl Animal = {
    impl Animal {
        speak: fn (&this) -> str = {
            return "Meow";
        }
    }
}

print_animal_sound: fn (animal: Animal:&) = {
    animal.speak().app::func();
}

call_fn: fn (a: called) = a.invoke();

main: fn = {
    dog := Dog{};
    cat := Cat{};
    func := |&dog, &cat|{
        print_animal_sound(dog);
        print_animal_sound(cat);
    }
    func.call_fn();
}