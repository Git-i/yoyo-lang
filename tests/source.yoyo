app: module = APP

Vec2: struct = {
    x: i32, y: i32,
    #(clone)
    duplicate_vec: fn (&this) -> This = {
        app::func(&"custom clone");
        return Vec2{ .x = this.x, .y = this.y };
    }
    #(destructor)
    drop: fn (&mut this) = {
        app::func(&"Dropping vec2 with x ${this.x}");
    }
}
new: fn(x: i32) -> Vec2 = return Vec2{ .x = x, .y = 20 };
consume: fn (val: Vec2) = return;
takes_foo: fn -> f64 = {
    a := new(10);
    clone_a: mut = a;
    clone_a.x = 15;
    consume(new(20));
    consume(a);
    return 10;
}