app: module = APP
Ostream: struct = {
    buffer: str,
    add: fn (&mut this, data: str) -> &mut This = {
        this.buffer = "${this.buffer}${data}";
        return this;
    }
    call: fn (&mut this, func: called (v: &mut Ostream)) = {
        func.invoke(this);
    }
}


main: fn = {
    cout: mut = Ostream{.buffer = ""};
    cout.add("Hello").add("World").call(||(v: &mut Ostream) app::func(&v.buffer););
}